trigger:
  branches:
    include:
      - main
  paths:
    include:
      - Backend/**  

variables:
- name: githubRegistry
  value: https://github.com/Abhay189/Letter.git

- name: containerRegistryName
  value: letterregistry.azurecr.io

- name: dockerImageName
  value: letter_backend

- name: dockerImageTag
  value: $(Build.BuildId)

- group: letter-backend-variable-group 

pool: 
  name: EC2-Agents

stages:

- stage: SonarQube_Scan
  jobs:
    - job: SonarQube_Analysis
      steps:
        - checkout: self
        - task: SonarQubePrepare@4
          inputs:
            SonarQube: "SonarCloudService"
            scannerMode: "CLI"
            configMode: "manual"
            cliProjectKey: "Abhay189_Letter"
            cliSources: "Backend"
          displayName: "Prepare SonarQube Scanner"

        - script: |
            sonar-scanner \
              -Dsonar.projectKey=Abhay189_Letter \
              -Dsonar.sources=Backend \
              -Dsonar.host.url=$(SONARQUBE_URL) \
              -Dsonar.login=$(SONARQUBE_TOKEN)
          displayName: "Run SonarQube Scan"

        - task: SonarQubePublish@4
          inputs:
            pollingTimeoutSec: "300"
          displayName: "Publish SonarQube Results"


- stage: Build
  jobs:
    - job: Docker_Image_Build 
      steps:
        - task: DockerInstaller@0
          displayName: Install Docker 
        - script: | 
            echo "Building docker image from the git repository"
            docker build -t $(containerRegistryName)/$(dockerImageName):$(dockerImageTag) ./Backend

            echo "Removing local git repository"
          displayName: Building docker image

- stage: Testing 
  jobs:
  - job: Testing_API_Endpoints 
    timeoutInMinutes: 3
    steps:
    - script: |
        echo "Spinning up docker container from previously created image"
        docker run --name letter-backend-container -p 8000:8000 -e USE_SQLITE_FOR_TESTS=true $(containerRegistryName)/$(dockerImageName):$(dockerImageTag)
        
        echo "Executing django API Testcases"
        docker exec letter-backend-container python manage.py test chat.tests.test

        echo "Stopping docker container" 
        docker stop letter-backend-container

        echo "Deleting docker container"
        docker rm letter-backend-container
      displayName: Testing API Calls 


- stage: Deploy
  jobs:
    - job: Deploy_Image_To_ACR
      steps:
      - script: | 
          echo "Logging in to ACR..."
          docker login $(containerRegistryName) -u $(DOCKER_USERNAME) -p $(DOCKER_PASSWORD)

          echo "Pushing Docker image to ACR registry"
          docker push $(containerRegistryName)/$(dockerImageName):$(dockerImageTag)

          echo "Tagging Docker image with latest tag..."
          docker tag $(containerRegistryName)/$(dockerImageName):$(dockerImageTag) $(containerRegistryName)/$(dockerImageName):latest

          echo "Pushing Docker image latest to ACR registry"
          docker push $(containerRegistryName)/$(dockerImageName):latest
        displayName: Deploying Docker image to ACR 


- stage: Cleanup
  jobs: 
    - job: Cleanup_Job
      steps:
      - script: | 
          echo "Removing latest build docker images"
          docker rmi $(containerRegistryName)/$(dockerImageName):latest
          docker rmi $(containerRegistryName)/$(dockerImageName):$(dockerImageTag)




    




         



