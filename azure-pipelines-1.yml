name: Test Pipeline

trigger: 
- main

variables:
  userName: Abhay 
  githubRegistry : https://github.com/Abhay189/Letter.git
  containerRegistryName : letterregistry.azurecr.io
  dockerImageName : letter_backend
  dockerImageTag : $(Build.BuildId)

pool: 
  name: EC2-Agents

#Build the backend. Get the docker image. 
#Test the docker image with the testcases defined in django application 
#Deploy the docker image to the ACR.

stages:
- stage: Build
  jobs:
    - job: Docker_Image_Build 
      steps:
        # Setup docker on the Linux machine. 
        - task: DockerInstaller@0
          displayName: Install Docker 

        # Copy code registry to the linux server.
        # Build image on the linux machine. 

        - script: | 
            echo "Cloning Git repository into host environment"
            git clone $(githubRegistry)

            echo "Building docker image from the git repository"
            docker build -t $(containerRegistryName)/$(dockerImageName):$(dockerImageTag) ./Backend
          displayName: Building docker image

# Testing stage 

- stage: Testing 
  jobs:
  - job: Testing_API_Endpoints 
    steps:
    # Use the docker image that you just created to run the backend and use the django testcases to ensure the build is doing well. 
    # run the docker container 
    # ssh into the docker container and run the testcases 
    - script: |
        echo "Spinning up docker container from previously created image"
        docker run --name letter-backend-container -p 8000:8000 -e USE_SQLITE_FOR_TESTS=true $(containerRegistryName)/$(dockerImageName):$(dockerImageTag)
        
        echo "Executing django API Testcases"
        docker exec letter-backend-container python manage.py test chat.tests.test

        echo "Stopping docker container" 
        docker stop letter-backend-container

        echo "Deleting docker container"
        docker rm letter-backend-container
      displayName: Testing API Calls 





         



